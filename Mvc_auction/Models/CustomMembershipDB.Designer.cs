//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.ComponentModel.DataAnnotations;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("Mvc_auction.Models", "UserInRole", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mvc_auction.Models.User), "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mvc_auction.Models.Role))]

#endregion

namespace Mvc_auction.Models
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class CustomMembershipDB : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект CustomMembershipDB, используя строку соединения из раздела "CustomMembershipDB" файла конфигурации приложения.
        /// </summary>
        public CustomMembershipDB() : base("name=CustomMembershipDB", "CustomMembershipDB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта CustomMembershipDB.
        /// </summary>
        public CustomMembershipDB(string connectionString) : base(connectionString, "CustomMembershipDB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта CustomMembershipDB.
        /// </summary>
        public CustomMembershipDB(EntityConnection connection) : base(connection, "CustomMembershipDB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Users. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Roles. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mvc_auction.Models", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Role.
        /// </summary>
        /// <param name="role_id">Исходное значение свойства role_id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        public static Role CreateRole(global::System.Int32 role_id, global::System.String name)
        {
            Role role = new Role();
            role.role_id = role_id;
            role.name = name;
            return role;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 role_id
        {
            get
            {
                return _role_id;
            }
            set
            {
                if (_role_id != value)
                {
                    Onrole_idChanging(value);
                    ReportPropertyChanging("role_id");
                    _role_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("role_id");
                    Onrole_idChanged();
                }
            }
        }
        private global::System.Int32 _role_id;
        partial void Onrole_idChanging(global::System.Int32 value);
        partial void Onrole_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mvc_auction.Models", "UserInRole", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Mvc_auction.Models.UserInRole", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Mvc_auction.Models.UserInRole", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mvc_auction.Models", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта User.
        /// </summary>
        /// <param name="user_id">Исходное значение свойства user_id.</param>
        /// <param name="mail">Исходное значение свойства mail.</param>
        /// <param name="password">Исходное значение свойства password.</param>
        /// <param name="passwordSalt">Исходное значение свойства passwordSalt.</param>
        /// <param name="userName">Исходное значение свойства userName.</param>
        public static User CreateUser(global::System.Int32 user_id, global::System.String mail, global::System.String password, global::System.String passwordSalt, global::System.String userName)
        {
            User user = new User();
            user.user_id = user_id;
            user.mail = mail;
            user.password = password;
            user.passwordSalt = passwordSalt;
            user.userName = userName;
            return user;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [DisplayName("User Id")]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                if (_user_id != value)
                {
                    Onuser_idChanging(value);
                    ReportPropertyChanging("user_id");
                    _user_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("user_id");
                    Onuser_idChanged();
                }
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [Display(Name = "Name")]
        [Required]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [Display(Name = "Last name")]
        [Required]
        public global::System.String lastName
        {
            get
            {
                return _lastName;
            }
            set
            {
                OnlastNameChanging(value);
                ReportPropertyChanging("lastName");
                _lastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("lastName");
                OnlastNameChanged();
            }
        }
        private global::System.String _lastName;
        partial void OnlastNameChanging(global::System.String value);
        partial void OnlastNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Display(Name = "Email address")]
        [DataType(DataType.EmailAddress)]
        [Required]
        public string mail
        {
            get
            {
                return _mail;
            }
            set
            {
                OnmailChanging(value);
                ReportPropertyChanging("mail");
                _mail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("mail");
                OnmailChanged();
            }
        }
        private global::System.String _mail;
        partial void OnmailChanging(global::System.String value);
        partial void OnmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String passwordSalt
        {
            get
            {
                return _passwordSalt;
            }
            set
            {
                OnpasswordSaltChanging(value);
                ReportPropertyChanging("passwordSalt");
                _passwordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("passwordSalt");
                OnpasswordSaltChanged();
            }
        }
        private global::System.String _passwordSalt;
        partial void OnpasswordSaltChanging(global::System.String value);
        partial void OnpasswordSaltChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String userName
        {
            get
            {
                return _userName;
            }
            set
            {
                OnuserNameChanging(value);
                ReportPropertyChanging("userName");
                _userName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("userName");
                OnuserNameChanged();
            }
        }
        private global::System.String _userName;
        partial void OnuserNameChanging(global::System.String value);
        partial void OnuserNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [Display(Name = "Date of registration")]
        [DisplayFormat(DataFormatString = "{0:d}", ApplyFormatInEditMode = true)]
        public Nullable<global::System.DateTime> createdDate
        {
            get
            {
                return _createdDate;
            }
            set
            {
                OncreatedDateChanging(value);
                ReportPropertyChanging("createdDate");
                _createdDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("createdDate");
                OncreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _createdDate;
        partial void OncreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OncreatedDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [DisplayFormat(DataFormatString = "{0:d}", ApplyFormatInEditMode = true)]
        [Display(Name = "Date of modifying")]
        public Nullable<global::System.DateTime> modifyedDate
        {
            get
            {
                return _modifyedDate;
            }
            set
            {
                OnmodifyedDateChanging(value);
                ReportPropertyChanging("modifyedDate");
                _modifyedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("modifyedDate");
                OnmodifyedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _modifyedDate;
        partial void OnmodifyedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnmodifyedDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
            
        public global::System.String newMail
        {
            get
            {
                return _newMail;
            }
            set
            {
                OnnewMailChanging(value);
                ReportPropertyChanging("newMail");
                _newMail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("newMail");
                OnnewMailChanged();
            }
        }
        private global::System.String _newMail;
        partial void OnnewMailChanging(global::System.String value);
        partial void OnnewMailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [Display(Name = "Activated")]
        public Nullable<global::System.Boolean> isActivated
        {
            get
            {
                return _isActivated;
            }
            set
            {
                OnisActivatedChanging(value);
                ReportPropertyChanging("isActivated");
                _isActivated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isActivated");
                OnisActivatedChanged();
            }
        }
        private Nullable<global::System.Boolean> _isActivated;
        partial void OnisActivatedChanging(Nullable<global::System.Boolean> value);
        partial void OnisActivatedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [Display(Name = "Locked out")]
        public Nullable<global::System.Boolean> isLockedOut
        {
            get
            {
                return _isLockedOut;
            }
            set
            {
                OnisLockedOutChanging(value);
                ReportPropertyChanging("isLockedOut");
                _isLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isLockedOut");
                OnisLockedOutChanged();
            }
        }
        private Nullable<global::System.Boolean> _isLockedOut;
        partial void OnisLockedOutChanging(Nullable<global::System.Boolean> value);
        partial void OnisLockedOutChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> lastLockedOutDate
        {
            get
            {
                return _lastLockedOutDate;
            }
            set
            {
                OnlastLockedOutDateChanging(value);
                ReportPropertyChanging("lastLockedOutDate");
                _lastLockedOutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lastLockedOutDate");
                OnlastLockedOutDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _lastLockedOutDate;
        partial void OnlastLockedOutDateChanging(Nullable<global::System.DateTime> value);
        partial void OnlastLockedOutDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> lastLoginDate
        {
            get
            {
                return _lastLoginDate;
            }
            set
            {
                OnlastLoginDateChanging(value);
                ReportPropertyChanging("lastLoginDate");
                _lastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lastLoginDate");
                OnlastLoginDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _lastLoginDate;
        partial void OnlastLoginDateChanging(Nullable<global::System.DateTime> value);
        partial void OnlastLoginDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [Display(Name = "Comments")]
        [DataType(DataType.MultilineText)]
        public global::System.String comments
        {
            get
            {
                return _comments;
            }
            set
            {
                OncommentsChanging(value);
                ReportPropertyChanging("comments");
                _comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("comments");
                OncommentsChanged();
            }
        }
        private global::System.String _comments;
        partial void OncommentsChanging(global::System.String value);
        partial void OncommentsChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mvc_auction.Models", "UserInRole", "Role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("Mvc_auction.Models.UserInRole", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("Mvc_auction.Models.UserInRole", "Role", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
